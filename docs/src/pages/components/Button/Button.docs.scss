/*
Button

@uswds https://designsystem.digital.gov/components/buttons

Markup: button.example.html

Style guide: components.button
*/

/*
`<Button>`

@react-example Button.example.tsx

@react-props Button.jsx

Style guide: components.button.react
*/

/*
---
*/

/*
Design Guidelines

<ul>
<li>Action buttons do NOT include icons. </li>
<li>Exception: Can include icons in buttons in mobile for CTAs outlining functionality. Examples: Filter, Sort, Map, and Menu. </li>
<li>Other exceptions require advance and separate approval than mock-ups by product teams. See "Exception process" in Foundations.</li>
<li>Buttons use title case. Example: Join Plan or Find Doctors.</li>
<li>Note that clickable cards are sentence case. See that component for more information.</li>
</ul>

When pairing 2 CTAs:
<ul>
<li>In forms/decision trees: Have the preferred action be on the right. Example: Back/Next or Cancel/Submit.</li>
<li>All other cases: Have the preferred action be on the left. Example: Create Account/Return to Home or Change My Account/Stop Easy Pay.</li>
</ul>

<h2>Content Guidelines</h2>

<ul>
<li>Describe what will happen, not the current state. <i>Example: Start Over.</i></li>
<li>CTA buttons always start with an action verb that describes the main thing users will be able to do once selected.</li>
<li>Pair it with a noun to help it be more clear. <i>Example: Change Password or Add Drug.</i></li>
<li>If in a form, it can be just the action verb if it's navigating between steps. <i>Example: Cancel, Back, Next, Submit.</i></li>
<li>Use the least amount of words possible (no more than 4).</li>
<li>Use title case for CTA buttons.</li>
</ul>

Get more content guidelines by going to the buttons page in the <a href="https://cms.invisionapp.com/dsm/cms/medicare">Medicare.gov DSM</a>.

<h2>Accessibility</h2>

<ul>
<li>Buttons should display a visible focus state when users tab to them.</li>
<li>Create a button with a <code>button</code> or <code>a</code> element to retain the native click functionality. Avoid using <code>&lt;div&gt;</code> or <code>&lt;img&gt;</code> tags to create buttons. Screen readers don't automatically know either is a usable button.</li>
<li>When styling links to look like buttons, remember that screen readers handle links slightly differently than they do buttons. Pressing the <code>Space</code> key triggers a button, but pressing the <code>Enter</code> key triggers a link.</li>
<li>Dimmed or unavailable buttons should have the <code>disabled</code> attribute applied. This removes native click and keypress events from the button. It also prevents automated scanners from logging a low contrast error. Finally, it announces the button as "dimmed" or "disabled" to screen readers, offering users additional context.</li>
<li>Disabled buttons - Don’t disable buttons, unless there’s a good reason to.</li>
<li>If you do disable a button, make sure it receives the disabled styling. A button element will automatically be styled as a disabled button when it has the disabled HTML attribute, but an a element will need to have the .ds-c-button--disabled class applied to it.</li>
</ul>

<p>View more guidance <a href="https://design.cms.gov/components/button/">CMS Design System</a>.</p>

Style guide: components.button.guidance
*/
